FROM ubuntu:24.04

ENV DEBIAN_FRONTEND=noninteractive

# Instalar dependencias base + librerías para AVIF + loaders adicionales para GdkPixbuf
RUN apt-get update && apt-get install -y \
    python3 python3-pip python3-venv \
    python3-gi python3-gi-cairo gir1.2-gtk-4.0 \
    libcairo2-dev libgirepository-2.0-dev \
    file wget fuse libfuse2 \
    desktop-file-utils \
    imagemagick \
    libavif-dev libheif-dev libwebp-dev \
    gir1.2-gdkpixbuf-2.0 \
    webp-pixbuf-loader \
    && rm -rf /var/lib/apt/lists/*

# Descargar appimagetool
RUN wget -O /usr/local/bin/appimagetool \
    https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage && \
    chmod +x /usr/local/bin/appimagetool

# Extraer appimagetool (no se puede ejecutar AppImage en Docker)
RUN cd /usr/local/bin && \
    ./appimagetool --appimage-extract && \
    mv squashfs-root appimagetool.AppDir && \
    ln -sf /usr/local/bin/appimagetool.AppDir/AppRun /usr/local/bin/appimagetool-extract

# Usar argumentos para UID/GID del host
ARG USER_ID=1000
ARG GROUP_ID=1000

# Crear grupo y usuario con el UID/GID del host
RUN groupadd -g ${GROUP_ID} builder || true
RUN useradd -m -u ${USER_ID} -g ${GROUP_ID} -s /bin/bash builder || true

RUN mkdir -p /build /output && \
    chown -R ${USER_ID}:${GROUP_ID} /build /output

USER ${USER_ID}:${GROUP_ID}

WORKDIR /build

# Script de construcción
COPY --chown=ubuntu:ubuntu build_appimage.sh /build/
RUN chmod +x /build/build_appimage.sh

ENTRYPOINT ["/build/build_appimage.sh"]